% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_topics.R
\name{calculate_topics}
\alias{calculate_topics}
\title{Calculate Topic Cluster from a Text Network}
\usage{
calculate_topics(
  text_network,
  documents = NULL,
  document_tokens = NULL,
  document_ids = NULL,
  negative_edge_weights = TRUE,
  page_rank_calculation = c("global", "cluster"),
  cluster_function = igraph::cluster_leiden,
  ...,
  document_relevance = c("pagerank_tfidf", "network"),
  document_pmi_weight = TRUE,
  keep_cluster_object = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{text_network}{An igraph graph representing the text network.}

\item{documents}{Optional, a data frame containing document information. Expects one row per token. NULL to skip.
Returns additional information on topic-relevant documents if provided. `document_tokens` and `document_ids`
variables are required. Additional variables (such as document meta data) can be passed. Note, however,
that these should contain no more than one unique value per document (see examples).}

\item{document_tokens}{String; The column name in documents containing the document tokens.}

\item{document_ids}{String; The column name in documents containing document identifiers.}

\item{negative_edge_weights}{Logical indicating whether to consider only edges
with positive weights. If the chosen clustering algorithm does not support negative edge weights,
set this to `FALSE`.}

\item{page_rank_calculation}{Character specifying the type of Page Rank calculation.
Options are "global" for global network Page Rank, or
"cluster" for calculating the Page Rank of the entities within each topic cluster.}

\item{cluster_function}{The clustering function to use. Can be any igraph clustering function.
Default is `igraph::cluster_leiden`.}

\item{...}{Additional arguments passed to `cluster_function`.}

\item{document_relevance}{String; How the `document_relevance` of
topic-specific documents should be calculated (if they are provided).
"pagerank_tfidf" calculates the re-scaled sum of all topic-relevant
entities' Page Rank in the document multiplied by their tf-idf (Term
Frequency - Inverse Document Frequency). "network" calculates the page rank
of each document in a topic-specific document-document network projected
from the co-occurrence of topic-relevant entities in the document.
Depending on the settings for `document_pmi_weight` the
latter will use a PMI-weighted with potentially negative weights.
As the calculation of topic-specific networks can be computationallly
expensive, it is recommended to set up a parallelization `future::plan()`
for this option. See details.}

\item{document_pmi_weight}{Logical; if `document_relevance = "network"`,
the network calculation should utilize weights calculated based on the PMI
(Pointwise Mutual Information). If `FALSE`, a simple co-occurrence weighting
is performed.}

\item{keep_cluster_object}{Logical indicating whether to keep the igraph
cluster object. Can be helpful for additional checks. See
`help(igraph::membership)`}

\item{verbose}{Logical indicating whether to print clustering metrics.}
}
\value{
A list object of class "textgraph_topics" containing topic entities,
  document data (optional), clustering metrics, and the cluster object (optional).
}
\description{
This function takes a text network represented as an igraph graph and performs
topic clustering using the specified clustering algorithm. It then calculates
additional metrics such as Page Rank, cluster metrics, and more.
}
\details{
The function performs topic clustering on the input text network, calculates
 additional metrics based on the specified parameters, and returns a structured object
 containing topics and metrics. Returns a list with model metrics, a data frame with a topic
 overview, a data frame with the entities associated with each topic, and (optionally)
 a data frame with the documents associated with each topic.
 Note that, depending on the `cluster_function` used, the results may be non-deterministic
 and dependant on a seed. Therefore, for algorithms like the suggested Leiden algorithm, it is
 strongly encouraged to a) run the function several times with different/no random seeds to
 ensure results are comparable across runs; and b) use a fixed random seed for reproducible
 results.
 The Page Rank of entities serves as a measure of their
 relative importance in a topic cluster. It can be calculated either globally with
 `page_rank_calculation = "global"`, as the Page Rank in the complete `text_network` (faster),
 or locally for each cluster with `page_rank_calculation = "global"`, where a
 subgraph is induced containing only the nodes of the given cluster. This takes longer,
 but can provide a better measure of a term's relevance within a topic. For the latter option,
 multithreading is supported if a plan was set up with `future::plan()`. If
 `document_relevance` is set to "network", the calculation of the topic-specific networks
 is parallelized as well.
}
\examples{
\dontrun{
topics <- calculate_topics(text_network,
                          documents = NULL,
                          document_tokens = NULL,
                          document_ids = NULL,
                          negative_edge_weights = TRUE,
                          page_rank_calculation = "global",
                          cluster_function = igraph::cluster_leiden,
                          objective_function = "CPM", # additional parameter of the cluster_function
                          keep_cluster_object = FALSE,
                          verbose = TRUE)
# optionally, we can add a dataframe with document information to get relevant documents
data("de_pol_twitter")
topics <- calculate_topics(text_network,
                          documents = de_pol_twitter \%>\% # when passing document data...
                              dplyr::select(doc_id, lemma, # ...we reduce the columns to the required variables...
                                            created_at, author_id, party, tweet_url), #...and document (not token!) metadata
                          document_tokens = "lemma",
                          document_ids = "doc_id",
                          negative_edge_weights = TRUE,
                          page_rank_calculation = "global",
                          cluster_function = igraph::cluster_leiden,
                          objective_function = "CPM", # additional parameter of the cluster_function
                          keep_cluster_object = FALSE,
                          verbose = TRUE)
}

}
