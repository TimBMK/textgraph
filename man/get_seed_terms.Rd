% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_seed_terms.R
\name{get_seed_terms}
\alias{get_seed_terms}
\title{get_seed_terms}
\usage{
get_seed_terms(
  data,
  doc_id = NULL,
  tokens,
  grouping_var,
  measure = c("chi2", "exact", "lr", "pmi"),
  threshold = NULL,
  max_results = NULL,
  max_result_ties = FALSE,
  min_results = NULL,
  show_plots = FALSE,
  save_plots = FALSE
)
}
\arguments{
\item{data}{A dataframe}

\item{doc_id}{String; Name of the variable containing document IDs. Optional, but can speed up computation for large data sets. Skip with `NULL`}

\item{tokens}{String; Name of the variable containing tokens (or lemmas) as a string}

\item{grouping_var}{String; name of the variable to accumulate and compare the tokens by. Note that rows with missing (`NA`) values in in the `grouping_var` are ignored.}

\item{measure}{String; the keyness measure. Can be one of "chi2", "exact" (Fisher's exact test), "lr" (likelihood ratio), or "pmi" (pointwise mutual information). See `quanteda.textstats::textstat_keyness()` for details}

\item{threshold}{Numerical; the keyness threshold for filtering results. Terms below the threshold are discarded. If `NULL`, no threshold is applied. Default is `NULL`.}

\item{max_results}{Numerical; the maximum number of terms to return per group, sorted in descending order according to the keyness measure. Threshold still applies. If `NULL`, all results are returned. Default is `NULL`.}

\item{max_result_ties}{Logical; indicates whether to drop tied values when `max_results` is applied. If `TRUE`, this can can result in more rows being returned than specified in `max_results`. Default is `FALSE`, selecting on of the ties values at random.}

\item{min_results}{Numerical; the minimum number of terms to return per group, overriding the `threshold` if necessary. Default is `NULL`.}

\item{show_plots}{Logical; indicates whether to display the keyness results plots for each group. Note: Plot represent results before `threshold`, `max_results`, or `min_results` are applied. Default is `FALSE`.}

\item{save_plots}{Logical; indicates whether to save the keyness result plots and return them with the keyterm data. Default is `FALSE`. If `TRUE`, the function returns a list where the first element contains the key terms, and the second element contains the plots}
}
\value{
If `save_plots` is `FALSE`, a data frame object containing the result of the keyness measure, inlcuding the `grouping_var`. If `save_plots` is `TRUE`, a list with two elements.
The first element is a data frame object containing the results of the keyness measure, inlcuding the `grouping_var`. The second object is a list with a keyness result plot for each element of the `grouping_var`.
}
\description{
This function identifies key terms for each group specified by a given variable from a dataframe containing tokenized text.
}
\details{
This function is intended to produce seed terms for additional analysis by utilizing one of the keyness measures provided in the quanteda.textstats package.
Essentially, it compares tokenized documents between the values of a given grouping variable. For example, it can be used to extract the most distinctive features between multiple authors or groups of social media accounts.
Additionally, it conveniently outputs and saves plots of the keyness if requested. As keyness measures can be somewhat context-dependant, additional options to filter the results are provided, by setting a `threshold` or the number of `min_results` or `max_results`.
}
\examples{
# In this example, we extract key terms for each official ministry account from a tokenized sample of German politicians' tweets sent over one week.
# We save and display the plots to inspect the results. Note that tokens with the value `NA` in the grouping_var "ministry_name" are excluded from the analysis!

data(de_pol_twitter)

seed_terms <- get_seed_terms(de_pol_twitter,
                             doc_id = "doc_id",
                             tokens = "lemma",
                             grouping_var = "ministry_name",
                             measure = "chi2",
                             threshold = NULL,
                             max_results = NULL,
                             max_result_ties = FALSE,
                             min_results = NULL,
                             show_plots = TRUE,
                             save_plots = TRUE)

}
